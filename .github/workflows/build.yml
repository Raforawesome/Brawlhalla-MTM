  name: build

  on:
    push:
      tags:
        - "v*.*.*"
        - "v*.*.*-*"
        - "v*.*.*-*-*"
        - "pre-release"
        - "beta"
        - "a*.*.*"
        - "latest"
        - "testing"
        - "rc*"
        - "pre-*.*.*"
        - "b*.*.*"
        - "incomplete-*.*.*"

  jobs:
    build:
      name: rust-build
      runs-on: ${{matrix.os}}
      strategy:
        matrix:
          include:
            - build: linux  # build job for x86_64 Linux
              os: ubuntu-latest
              rust: stable
              target: x86_64-unknown-linux-gnu
              cross: false
            - build: macos
              os: macos-latest  # build job for x86_64 macOS
              rust: stable
              target: x86_64-apple-darwin
              cross: false
            - build: windows
              os: windows-latest  # build job for x86_64 macOS
              rust: stable
              target: x86_64-pc-windows-gnu
              cross: false
            - build: arm-v7  # build job for arm Linux
              os: ubuntu-latest
              rust: stable
              target: armv7-unknown-linux-gnueabihf
              linker: gcc-arm-linux-gnueabihf
              cross: true
            - build: aarch64  # build job for arm64 Linux
              os: ubuntu-latest
              rust: stable
              target: aarch64-unknown-linux-gnu
              linker: gcc-aarch64-linux-gnu
              cross: true
            - build: aarch64  # build job for arm64 macOS
              os: macos-latest
              rust: stable
              target: aarch64-apple-darwin
              cross: false
            - build: aarch64  # build job for arm64 Windows
              os: windows-latest
              rust: stable
              target: aarch64-pc-windows-msvc
              cross: false
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Linker
        if: matrix.cross
        run: |
          sudo apt update
          sudo apt install ${{ matrix.linker }}
      - name: Install Rust
        run: |
          rustup install ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          rustup show
      - name: Build  # On non-Windows platforms
        if: matrix.os != 'windows-latest'
        run: RUSTFLAGS='-C link-arg=-s' cargo build --release --target ${{ matrix.target }}
      - name: Build  # On Windows platforms
        if: matrix.os == 'windows-latest'
        run: |
          setx RUSTFLAGS "-C link-arg=-s"
          cargo build --release --target ${{ matrix.target }}
      - name: Rename  # On non-Windows platforms
        if: matrix.os != 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/${{ github.event.repository.name }} target/${{ matrix.target }}/release/${{ github.event.repository.name }}_${{ matrix.target }}
      - name: Rename  # On Windows platforms
        if: matrix.os == 'windows-latest'
        run: |
          mv target/${{ matrix.target }}/release/${{ github.event.repository.name }}.exe target/${{ matrix.target }}/release/${{ github.event.repository.name }}_${{ matrix.target }}.exe
      - name: Release  # On non-Windows platforms
        if: matrix.os != 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/${{ github.event.repository.name }}_${{ matrix.target }}
      - name: Release  # On Windows platforms
        if: matrix.os == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.target }}/release/${{ github.event.repository.name }}_${{ matrix.target }}.exe
